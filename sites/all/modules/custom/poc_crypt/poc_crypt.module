<?php

/*
 * Cryptage des données juste avant l'enregistrement des données en BDD
 */

function poc_crypt_user_presave(&$edit, $account, $category){
  $edit_object = (object) $edit;
  $user_wrapper = entity_metadata_wrapper('user', $edit_object);
  if(module_exists('crypto_config_fields')){
    if($user_fields_list = variable_get('user_field_list')){
      foreach($user_fields_list as $key_field => $value_field){
        if($value_field != '0'){
          if (!(unserialize($user_wrapper->$key_field->value()))){
            $crypt_value = encrypt($user_wrapper->$key_field->value());
            $user_wrapper->$key_field->set($crypt_value);
          }
        }
      }
    }
  }
  $edit = (array) $edit_object;
}

/*
 * Decryptage des données pour l'affichage d'un user
 */

function poc_crypt_user_load($users){
  foreach($users as $user_load){
    $user_wrapper = entity_metadata_wrapper('user', $user_load);
    if(module_exists('crypto_config_fields')){
      if($user_fields_list = variable_get('user_field_list')){
        foreach($user_fields_list as $key_field => $value_field){
          if($value_field != '0'){
            if (unserialize($user_wrapper->$key_field->value())){
              $user_field_value = decrypt($user_wrapper->$key_field->value());
              $user_wrapper->$key_field->set($user_field_value);
            }
          }
        }
      }
    }
  }
}

function poc_crypt_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'poc_crypt') . '/includes/views',
  );
}

function crypt_user_find_by_field($table_field_value){
  foreach($table_field_value as $key_field_value => $value_field_value){
    if($value_field_value){
      $query_results_table = db_query("SELECT ".$key_field_value."_value, entity_id FROM field_data_".$key_field_value."")->fetchAll();
      $table_all_values = array();
      $column_name = $key_field_value.'_value';
      foreach($query_results_table as $column => $value_column){
        $table_all_values[$value_column->entity_id] = decrypt($value_column->$column_name);
      }
      $uid_in_table = array_search(strtolower($value_field_value), array_map('strtolower', $table_all_values));
      if($uid_in_table){
        return $uid_in_table;
      }
      else{
        return FALSE;
      }
    }
  }
}

<?php

/*
 * Cryptage des données juste avant l'enregistrement des données en BDD
 */

function poc_crypt_user_presave(&$edit, $account, $category){
  $edit_object = (object) $edit;
  $user_wrapper = entity_metadata_wrapper('user', $edit_object);
  //TODO : récupérer la variable de config user_list... si le module crypto_config_fields est activé, si elle est setté, bouclé dessus et faire le traitement pour chaque champs
  $crypt_numero = encrypt($user_wrapper->field_numero_securit_social->value());
  $user_wrapper->field_numero_securit_social->set($crypt_numero);
  $edit = (array) $edit_object;
}

/*
 * Decryptage des données pour l'affichage d'un user
 */

function poc_crypt_user_load($users){
  foreach($users as $user_load){
    $user_wrapper = entity_metadata_wrapper('user', $user_load);
    //TODO : récupérer la variable de config user_list... si le module crypto_config_fields est activé, si elle est setté, bouclé dessus et faire le traitement pour chaque champs
    if (unserialize($user_wrapper->field_numero_securit_social->value())){
      $user_field_numero_securit_social_value = decrypt($user_wrapper->field_numero_securit_social->value());
      $user_wrapper->field_numero_securit_social->set($user_field_numero_securit_social_value);
    }
  }
}

// function poc_crypt_views_api() {
//   return array(
//     'api' => 3,
//     'path' => drupal_get_path('module', 'poc_crypt') . '/includes/views',
//   );
// }
